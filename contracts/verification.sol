pragma ton-solidity >=0.30.0;

contract Verify {
    bytes constant m_vkey = hex"481498160a46e505093fcabfd19306b359a2c646be796a5e8bf2860d3d55d6c5d8a9f87c733f6ed2d7bd5a88f4b02f13e01d3fe7752bad5527db35b41fb64c4e18f2daafc8aec7c9ec089966d3852f9cbe3ea609e6ae5177af5f0621c2688d1594832eea476b21befed246b6d406d921e4bce69b382b88b8aae3e0e41a9722f37cfc78d92f32b500fb66e02382456f0c545d9f3c613fe0987f66a8d65d53a4ff0990564f8569ea64ecd204805393e6dcdb868c412dbb0d6c37868169fd394404db37cdb93fc157666ad79b36aa253f4076f33686db7cb9daf73b30614914e5bb5e87ba7a9ef376163acbe5535735b50b71f36a1e0fee065f7c3f75e191d99a774182e04f385972ee946f96989fbd98e6d707b02a788fac237263ec243506d70844813924f6075d9506e6677859fd16ab06ae95620026acd71dcb35dc53a03b1af2c1975e0489159b8cd949da270a9a19516339330a9476a71fd464d9d93b6baa0e4292cd620bb23d963fea2ba23adc587a586ee0073edae2223f9d12ef0847194163d47054d40d7995448ca583918b3fec2c1dbe24e92eb919a3be6b7dcad43693c61fd83bf76b9c8c44d49530b102003ea834414fe8710f52965e29ce0c6c8ddad47a75366f2b033eafb47dddb6c41e1e1cf399541a01ec10aa0503f2ccaa11cc9e567a8aa5784cb9f02fe36b7a528e8795ffdaf79b04e7384b1b9af1f4f348f674fcf89cc4e9bebc82505c6f47e615a94ffbfb56720864e535d804d26246e8215a69cfc6f7a456e1bde6d620cd2cfe0f90be3d51b25b4ab2bd855ed3e6dc14b70447c3d7ee741aef72c2e6f674b8fef61eae9f0d17d3b4e202434a2fcf48f1af994ce989750bc46d4efa3b7b20363b00c55d7de1b0f5ecf5022a7f99da10fea30ba566dd5180e4ff8490cfdf82ec28c3b3171630e049902a1e56d24835e46798cea0d1173a451ffba93cae793ecaf4220f03ee051296ac4ad1f5fac54284cb4904ed7f6f2296983ac996e5c4eeabdd12a92a2ced18b342936c1904cef442373415cf2cdfd470f6286189d7f6aa5400781ab8683a2a7958122205bcb788dd52946ae62a03222c2c44bdef65a943ac50a3657d0d7d195822286b50540913c2fc84aabd41c7a343e7912aef2ada6e1f810100000000000000a0781fb0acb4008bfa73b4ef8e572dee6bf43dcfe793e5b6e2ed46afed5d867ed76862e5b1bcd406e6fe5528bc1b4b030100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    uint8 constant PROOF_SIZE = 192;

    function verify(bytes proof) public view returns (bool) {
        require(proof.length == PROOF_SIZE);
        tvm.accept();
        string blob_str = proof;
        blob_str.append(m_vkey);
        return tvm.vergrth16(blob_str);
    }
}
